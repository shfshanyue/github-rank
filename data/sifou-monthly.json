[
  {
    "title": "Vue3+TypeScript封装axios并进行请求调用",
    "description": "不是吧，不是吧，原来真的有人都2021年了，连TypeScript都没听说过吧？在项目中使用TypeScript虽然短期内会增加一些开发成本，但是对于其需要长期维护的项目，TypeScript能够减少其维护成本，使用TypeScript增加...",
    "url": "https://segmentfault.com/a/1190000039806000",
    "author": "我的名字豌豆",
    "home_url": "https://segmentfault.com/u/liu_namepea",
    "votes": "46",
    "rank": 1
  },
  {
    "title": "六个问题助你理解 React Fiber",
    "description": "React Fiber 是Facebook花费两年余时间对 React 做出的一个重大改变与优化，是对 React 核心算法的一次重新实现。从Facebook在 React Conf 2017会议上确认，React Fiber 会在React 16 版本发布至今，也已过去三年...",
    "url": "https://segmentfault.com/a/1190000039682751",
    "author": "独钓寒江雪",
    "home_url": "https://segmentfault.com/u/king_hcj",
    "votes": "56",
    "rank": 2
  },
  {
    "title": "猛增 110K Star！年增长数最多的 10 大顶级前端学习资源项目！",
    "description": "大家好，我是你们的 猫哥，那个不喜欢吃鱼、又不喜欢喵 的超级猫 ~关于猫哥，大家可以看看我的年终总结 前端工程师的 2020 年终总结 - 乾坤未定，你我皆黑马。今天给大家推荐 2020 年增长数最多的 10 大顶级前端...",
    "url": "https://segmentfault.com/a/1190000039729227",
    "author": "夜尽天明",
    "home_url": "https://segmentfault.com/u/biaochenxuying",
    "votes": "50",
    "rank": 3
  },
  {
    "title": "17K star 仓库，解决 90% 的大厂基础面试题",
    "description": "前言笔者开源的前端进阶之道已有三年之久，至今也有 17k star，承蒙各位读者垂爱。在当下部分内容已经略微过时，因此决定提笔翻新内容。翻新后的内容会全部集合在「干爆前端」中，有兴趣的读者可以前往查看。阅读...",
    "url": "https://segmentfault.com/a/1190000039783802",
    "author": "y_ck",
    "home_url": "https://segmentfault.com/u/user_ngjv5fmp",
    "votes": "50",
    "rank": 4
  },
  {
    "title": "推荐 7 个 Vue2、Vue3 源码解密分析的重磅开源项目 👍",
    "description": "大家好，我是你们的 猫哥，那个不喜欢吃鱼、又不喜欢喵 的超级猫 ~1. 为什么要学习源码 ?阅读优秀的代码的目的是让我们能够写出优秀的代码。不给自己设限，不要让你周围人的技术上限成为你的上限。其实就跟我们写...",
    "url": "https://segmentfault.com/a/1190000039691166",
    "author": "夜尽天明",
    "home_url": "https://segmentfault.com/u/biaochenxuying",
    "votes": "46",
    "rank": 5
  },
  {
    "title": "20个常用的CSS知识点",
    "description": "1. 如何隐藏滚动条 {代码...} 2. 修改滚动条样式 {代码...} 3. 修改input框placeholder的颜色 {代码...} 4. 按钮不可点击的样式 {代码...} 5. CSS鼠标指针事件：阻止任何JS事件 {代码...} 6. 文字超出强制n行 超...",
    "url": "https://segmentfault.com/a/1190000039767791",
    "author": "叫我欧文就好",
    "home_url": "https://segmentfault.com/u/jiaowoouwenjiuhao",
    "votes": "36",
    "rank": 6
  },
  {
    "title": "Redis 高可用篇：你管这叫主从架构数据同步原理？",
    "description": "在《Redis 核心篇：唯快不破的秘密》中，「码哥」揭秘了 Redis 五大数据类型底层的数据结构、IO 模型、线程模型、渐进式 rehash 掌握了 Redis 快的本质原因。",
    "url": "https://segmentfault.com/a/1190000039670541",
    "author": "码哥字节",
    "home_url": "https://segmentfault.com/u/magebyte",
    "votes": "32",
    "rank": 7
  },
  {
    "title": "[项目实战] Webpack to Vite， 为开发提速！",
    "description": "背景最近，就 前端开发过程中的痛点及可优化项 做了一次收集。 其中，构建耗时、项目编译速度慢 的字眼出现了好几次。随着业务的快速发展，我们很多项目的体积也快速膨胀。 随之而来的， 就是打包变慢等问题。提...",
    "url": "https://segmentfault.com/a/1190000039795956",
    "author": "皮小蛋",
    "home_url": "https://segmentfault.com/u/scaukk",
    "votes": "27",
    "rank": 8
  },
  {
    "title": "灵魂拷问！浏览器输入「xxxxhub」的背后.....",
    "description": "到现在为止，我们算是把应用层、运输层、网络层和数据链路层都介绍完了，那么现在是时候把这些内容都串起来，做一个全面的回顾了。那么我这就以 Web 页面的请求历程为例，来和你聊聊计算机网络中这些协议是怎样工...",
    "url": "https://segmentfault.com/a/1190000039738922",
    "author": "程序员cxuan",
    "home_url": "https://segmentfault.com/u/cxuan",
    "votes": "26",
    "rank": 9
  },
  {
    "title": "webpack核心模块tapable源码解析",
    "description": "上一篇文章我写了tapable的基本用法，我们知道他是一个增强版版的发布订阅模式，本文想来学习下他的源码。tapable的源码我读了一下，发现他的抽象程度比较高，直接扎进去反而会让人云里雾里的，所以本文会从最简...",
    "url": "https://segmentfault.com/a/1190000039757900",
    "author": "蒋鹏飞",
    "home_url": "https://segmentfault.com/u/jiangpengfei_5ecce944a3d8a",
    "votes": "19",
    "rank": 10
  },
  {
    "title": "中小型前端团队代码规范工程化最佳实践 - ESLint",
    "description": "前言There are a thousand Hamlets in a thousand people's eyes.一千个程序员，就有一千种代码风格。在前端开发中，有几个至今还在争论的代码风格差异：单引号还是双引号？代码行结束是否需要分号？两个空格还是...",
    "url": "https://segmentfault.com/a/1190000039814304",
    "author": "axuebin",
    "home_url": "https://segmentfault.com/u/axuebin",
    "votes": "24",
    "rank": 11
  },
  {
    "title": "Promise知识汇总和面试情况",
    "description": "Javascript异步编程先后经历了四个阶段，分别是Callback阶段，Promise阶段，Generator阶段和Async/Await阶段。Callback很快就被发现存在回调地狱和控制权问题，Promise就是在这个时间出现，用以解决这些问题，Pro...",
    "url": "https://segmentfault.com/a/1190000039699000",
    "author": "小磊",
    "home_url": "https://segmentfault.com/u/xiaolei_599661330c0cb",
    "votes": "24",
    "rank": 12
  },
  {
    "title": "那些年错过的React组件单元测试（上）",
    "description": "关于前端单元测试，其实两年前我就已经关注了，但那时候只是简单的知道断言，想着也不是太难的东西，项目中也没有用到，然后就想当然的认为自己就会了。",
    "url": "https://segmentfault.com/a/1190000039710016",
    "author": "前端森林",
    "home_url": "https://segmentfault.com/u/fengshuan",
    "votes": "24",
    "rank": 13
  },
  {
    "title": "浅探 Web Worker 与 JavaScript 沙箱",
    "description": "本文并不会从头开始介绍 Web Worker 的基础知识和基本 API 的使用等（只是部分有涉及），若还未了解过 Web Worker，可参考查阅 W3C 标准 Workers 文档 中的相关介绍。",
    "url": "https://segmentfault.com/a/1190000039795656",
    "author": "ES2049",
    "home_url": "https://segmentfault.com/u/alisecued",
    "votes": "19",
    "rank": 14
  },
  {
    "title": "setState详解与React性能优化",
    "description": "开发中我们并不能直接通过修改 state 的值来让界面发生更新：因为我们修改了 state 之后, 希望 React 根据最新的 Stete 来重新渲染界面, 但是这种方式的修改 React 并不知道数据发生了变化",
    "url": "https://segmentfault.com/a/1190000039776687",
    "author": "风不识途",
    "home_url": "https://segmentfault.com/u/tudou_5e2d76940fbaa",
    "votes": "20",
    "rank": 15
  },
  {
    "title": "写TypeScript代码的10种坏习惯",
    "description": "近几年 TypeScript 和 JavaScript 一直在稳步发展。我们在过去写代码时养成了一些习惯，而有些习惯却没有什么意义。以下是我们都应该改正的 10 个坏习惯。",
    "url": "https://segmentfault.com/a/1190000039368534",
    "author": "疯狂的技术宅",
    "home_url": "https://segmentfault.com/u/evilboy",
    "votes": "22",
    "rank": 16
  },
  {
    "title": "关于从入门three.js到做出3d地球这件事(第三篇: 光与影)",
    "description": "通过前面几篇我们了解了坐标系、相机、物体等概念, 这一篇我们要让3d世界里的物体, 更像我们的现实世界的物体, 我们要为3d世界绘制光与影。",
    "url": "https://segmentfault.com/a/1190000039724667",
    "author": "lulu_up",
    "home_url": "https://segmentfault.com/u/lulu_up",
    "votes": "28",
    "rank": 17
  },
  {
    "title": "安全地在前后端之间传输数据 - 「1」技术预研",
    "description": "已经不是第一次写这个主题了，最近有朋友拿 5 年前的《Web 应用中保证密码传输安全》来问我：“为什么按你说的一步步做下来，后端解不出来呢？”加解密这种事情，差之毫厘谬以千里，我认为多半就是什么参数没整对，...",
    "url": "https://segmentfault.com/a/1190000039827138",
    "author": "边城",
    "home_url": "https://segmentfault.com/u/jamesfancy",
    "votes": "17",
    "rank": 18
  },
  {
    "title": "CSS @property，让不可能变可能",
    "description": "根据 MDN -- CSS Property，@property CSS at-rule 是 CSS Houdini API 的一部分, 它允许开发者显式地定义他们的 CSS 自定义属性，允许进行属性类型检查、设定默认值以及定义该自定义属性是否可以被继承。",
    "url": "https://segmentfault.com/a/1190000039826626",
    "author": "chokcoco",
    "home_url": "https://segmentfault.com/u/chokcoco",
    "votes": "20",
    "rank": 19
  },
  {
    "title": "关于从入门three.js到做出3d地球这件事(第二篇: 开发必备的辅助技能)",
    "description": "开发3d效果的时候, 不能每次都通过刷新页面来更新图像, 我们工程师当然会发明出相应的工具辅助开发工作, 这一篇我们一起学习三个好用的工具, 让我们的开发更畅快。",
    "url": "https://segmentfault.com/a/1190000039683111",
    "author": "lulu_up",
    "home_url": "https://segmentfault.com/u/lulu_up",
    "votes": "28",
    "rank": 20
  },
  {
    "title": "Vue 3 组件开发：搭建基于SpreadJS的表格编辑系统（环境搭建）",
    "description": "Vue是一套用于构建用户界面的渐进式框架，与其它大型 JS 框架不同，Vue 被设计为可以自底向上逐层应用，更易上手，还便于与第三方库或既有项目整合，因此，Vue完全能够为复杂的单页应用提供驱动。",
    "url": "https://segmentfault.com/a/1190000039808957",
    "author": "葡萄城技术团队",
    "home_url": "https://segmentfault.com/u/grapecity",
    "votes": "19",
    "rank": 21
  },
  {
    "title": "超全面的权限系统设计方案！",
    "description": "我的公众号：MarkerHub，Java网站：[链接]更多精选文章请点击：Java笔记大全.md小Hub解读：没想到小小角色权限系统也这么多内容，不过通常我都是直接找个开源权限系统作为基础开发业务，不过权限系统怎么设计的，...",
    "url": "https://segmentfault.com/a/1190000039676989",
    "author": "MarkerHub",
    "home_url": "https://segmentfault.com/u/markerhub",
    "votes": "22",
    "rank": 22
  },
  {
    "title": "vue项目'微前端'qiankun.js的实战攻略",
    "description": "关于微前端的大概念大家应该听过太多了, 这里我就大白话阐述一下, 比如我们新建三个vue工程a、b、c, a负责导航模块, b负责列表页面, c负责详情页面, 然后我们可以通过微前端技术把他们组合在一起形成一个完...",
    "url": "https://segmentfault.com/a/1190000039783062",
    "author": "lulu_up",
    "home_url": "https://segmentfault.com/u/lulu_up",
    "votes": "18",
    "rank": 23
  },
  {
    "title": "vue3常用的API实用型",
    "description": "vue3.x已经发布了这么久，相关的生态也慢慢起来了，包括vite这个新的打包工具，在vue3.0学习过程中有一些实用性的api对比，希望能在开发中给大家做个示范，准确的使用对应的api去完成我们的项目开发",
    "url": "https://segmentfault.com/a/1190000039706353",
    "author": "万年打野易大师",
    "home_url": "https://segmentfault.com/u/faker_5acebe0256c30",
    "votes": "16",
    "rank": 24
  },
  {
    "title": "Vue2.x 的双向绑定原理及实现",
    "description": "Vue 数据双向绑定原理Vue 是利用的 Object.defineProperty() 方法进行的数据劫持，利用 set、get 来检测数据的读写。[链接]MVVM 框架主要包含两个方面，数据变化更新视图，视图变化更新数据。视图变化更新数据，...",
    "url": "https://segmentfault.com/a/1190000039750996",
    "author": "九旬",
    "home_url": "https://segmentfault.com/u/ansonznl",
    "votes": "22",
    "rank": 25
  },
  {
    "title": "npm/yarn lock真香",
    "description": "看完本文，你将从整体了解依赖版本锁定原理，package-lock.json 或 yarn.lock 的重要性。首先要从最近接连出现两起有关 npm 安装 package.json 中依赖包，由于依赖包版本更新 bug 造成项目出错问题说起。",
    "url": "https://segmentfault.com/a/1190000039684460",
    "author": "wuwhs",
    "home_url": "https://segmentfault.com/u/wuwhs",
    "votes": "23",
    "rank": 26
  },
  {
    "title": "ES2019 中 8 个非常有用的功能",
    "description": "ES2019 规范是对 JavaScript的小规模扩展，但仍带来了一些有趣的功能。本文向你展示八个 ES2019 的功能，这些功能可以使你的开发变得更轻松。",
    "url": "https://segmentfault.com/a/1190000039366852",
    "author": "疯狂的技术宅",
    "home_url": "https://segmentfault.com/u/evilboy",
    "votes": "13",
    "rank": 27
  },
  {
    "title": "有意思！强大的 SVG 滤镜",
    "description": "想写一篇关于 SVG 滤镜的文章已久，SVG 滤镜的存在，让本来就非常强大的 CSS 如虎添翼。让仅仅使用 CSS/HTML/SVG 创作的效果更上一层楼。题图为袁川老师使用 SVG 滤镜实现的云彩效果 -- CodePen Demo -- Cloud (S...",
    "url": "https://segmentfault.com/a/1190000039700192",
    "author": "chokcoco",
    "home_url": "https://segmentfault.com/u/chokcoco",
    "votes": "14",
    "rank": 28
  },
  {
    "title": "SeaTable 开发者版可以运行 Python 了，开发自定义数据处理流程更方便",
    "description": "又填新功能了！从 1.8.0 版开始，SeaTable 开发者版加入了运行 Python 的能力（具体配置请查看使用手册），我们可以更方便地快速开发自定义数据处理流程了，让开发小应用变得更简单更有想象力。",
    "url": "https://segmentfault.com/a/1190000039692901",
    "author": "SeaTable开发者版",
    "home_url": "https://segmentfault.com/u/seatable",
    "votes": "13",
    "rank": 29
  },
  {
    "title": "常见的8个前端防御性编程方案",
    "description": "关于前端防御性编程我们大多数情况可能遇到过，后端的由于同时请求人数过多，或者数据量过大，又或者是因为异常导致服务异常，接口请求失败，然后前端出现白屏或者报错还有一种情况，是前端自身写的代码存在一些...",
    "url": "https://segmentfault.com/a/1190000039737887",
    "author": "Peter谭老师",
    "home_url": "https://segmentfault.com/u/jerrytanjinjie",
    "votes": "12",
    "rank": 30
  }
]